generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime? @default(dbgenerated("'2022-09-17 12:57:41.494006'::timestamp without time zone")) @db.Timestamp(6)
  tests     tests[]
}

model disciplines {
  id                  Int                   @id @default(autoincrement())
  name                String                @unique
  termId              Int
  createdAt           DateTime?             @default(dbgenerated("'2022-09-17 12:57:41.494006'::timestamp without time zone")) @db.Timestamp(6)
  terms               terms                 @relation(fields: [termId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teachersDisciplines teachersDisciplines[]
}

model teachers {
  id                  Int                   @id @default(autoincrement())
  name                String                @unique
  createdAt           DateTime?             @default(dbgenerated("'2022-09-17 12:57:41.494006'::timestamp without time zone")) @db.Timestamp(6)
  teachersDisciplines teachersDisciplines[]
}

model teachersDisciplines {
  id           Int         @id @default(autoincrement())
  teacherId    Int
  disciplineId Int
  createdAt    DateTime?   @default(dbgenerated("'2022-09-17 12:57:41.494006'::timestamp without time zone")) @db.Timestamp(6)
  disciplines  disciplines @relation(fields: [disciplineId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teachers     teachers    @relation(fields: [teacherId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tests        tests[]
}

model terms {
  id          Int           @id @default(autoincrement())
  number      Int           @unique
  createdAt   DateTime?     @default(dbgenerated("'2022-09-17 12:57:41.494006'::timestamp without time zone")) @db.Timestamp(6)
  disciplines disciplines[]
}

model tests {
  id                  Int                  @id @default(autoincrement())
  name                String
  pdfUrl              String
  categoryId          Int
  teacherDisciplineId Int
  createdAt           DateTime?            @default(dbgenerated("'2022-09-17 12:57:41.494006'::timestamp without time zone")) @db.Timestamp(6)
  categories          categories?          @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teachersDisciplines teachersDisciplines? @relation(fields: [teacherDisciplineId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  createdAt DateTime? @default(dbgenerated("'2022-09-17 12:57:41.494006'::timestamp without time zone")) @db.Timestamp(6)
}
